@startuml Diagrama_Clases_Arduino

!theme plain
skinparam linetype ortho
skinparam class {
    BackgroundColor #FAFAFA
    BorderColor #2C3E50
    BorderThickness 2
    ArrowColor #34495E
    ArrowThickness 2
    AttributeFontColor #2C3E50
    AttributeFontSize 11
    MethodFontColor #2C3E50
    MethodFontSize 11
}
skinparam package {
    BackgroundColor #ECF0F1
    BorderColor #3498DB
    BorderThickness 2
    FontColor #2C3E50
    FontSize 14
    FontStyle bold
}
skinparam stereotype {
    ABackgroundColor #E8F8F5
    CBorderColor #27AE60
}

title **Diagrama de Clases - Sistema de Control Arduino IR**

package "üéõÔ∏è Interfaz Gr√°fica" as GUI {
    
    abstract class SwingComponent <<abstract>> {
        #PRIMARY_COLOR: Color = #4A90E2
        #SECONDARY_COLOR: Color = #52C0F5
        #BACKGROUND_COLOR: Color = #F8F9FA
        #TEXT_COLOR: Color = #2C3E50
        #SUCCESS_COLOR: Color = #27AE60
        #DANGER_COLOR: Color = #E74C3C
        --
        #createStyledComponent(): Component
        #applyTheme(): void
    }
    
    class pantallainicial1 <<Singleton>> {
        ~frame2: Pantalla2
        +botonInicio: JButton
        +jButton1: JButton {Salir}
        +jButton2: JButton {Men√∫}
        +jPanel1: JPanel
        +titleLabel: JLabel
        +etiquetaNumero: JLabel
        +logoLabel: JLabel
        -PRIMARY_COLOR: Color = #59BBCE
        -SECONDARY_COLOR: Color = #2B84C0
        -BACKGROUND_COLOR: Color = #D7FFFF
        -TEXT_COLOR: Color = #2C3E50
        -BUTTON_HOVER: Color = #1E73A5
        -SUCCESS_COLOR: Color = #96CB72
        -DANGER_COLOR: Color = #D77064
        --
        +pantallainicial1()
        -initComponents(): void
        +getPantalla2(): Pantalla2
        -createTopPanel(): JPanel
        -createCenterPanel(): JPanel
        -createButtonPanel(): JPanel
        -createStyledButton(text: String, baseColor: Color): JButton
        -createBottomPanel(): JPanel
        -botonInicioActionPerformed(evt: ActionEvent): void
        -jButton2ActionPerformed(evt: ActionEvent): void
        +mostrarNumero(numero: String): void
        +setLogo(rutaLogo: String): void
        --
        **Responsabilidades:**
        ‚Ä¢ Interfaz principal con dise√±o avanzado
        ‚Ä¢ Sistema de temas personalizables
        ‚Ä¢ Navegaci√≥n con efectos hover
        ‚Ä¢ Gesti√≥n din√°mica de im√°genes
        ‚Ä¢ Colores y estilos profesionales
    }
    
    class Pantalla2 <<Display>> {
        -titleLabel: JLabel
        -instructionLabel: JLabel
        -statusLabel: JLabel
        -displayLabel: JLabel
        -backButton: JButton
        -keyDisplayPanel: JPanel
        -PRIMARY_COLOR: Color = #2980B9
        -SECONDARY_COLOR: Color = #3498DB
        -BACKGROUND_COLOR: Color = #ECF0F1
        -TEXT_COLOR: Color = #2C3E50
        -SUCCESS_COLOR: Color = #27AE60
        -ACCENT_COLOR: Color = #9B59B6
        -CARD_COLOR: Color = #FFFFFF
        --
        +Pantalla2()
        -initComponents(): void
        -createTopPanel(): JPanel
        -createCenterPanel(): JPanel
        -createBottomPanel(): JPanel
        +getBackButton(): JButton
        -createStyledButton(text: String): JButton
        +mostrarNumero(numero: String): void
        -updateVisualFeedback(): void
        -loadImageFromFile(numero: String): ImageIcon
        --
        **Responsabilidades:**
        ‚Ä¢ Visualizaci√≥n de c√≥digos IR con im√°genes
        ‚Ä¢ Feedback visual mejorado con efectos
        ‚Ä¢ Animaciones de estado y transiciones
        ‚Ä¢ Carga din√°mica de recursos gr√°ficos
    }
    
    class MenuComando <<Modal>> {
        -parentFrame: JFrame
        -historialBtn: JButton
        -cerrarBtn: JButton
        -FONDO_COLOR: Color = #F5F0FF
        -AZUL_PRIMARIO: Color = #00BFFF
        -VERDE_CONTROL: Color = #7ED957
        -ROJO_CERRAR: Color = #FF6B6B
        -TEXTO_OSCURO: Color = #212121
        --
        +MenuComando(parentFrame: JFrame)
        -initUI(): void
        -crearBotonEstilizado(texto: String, fondo: Color, textoColor: Color): JButton
        -mostrarHistorial(): void
        --
        **Responsabilidades:**
        ‚Ä¢ Men√∫ de opciones con dise√±o mejorado
        ‚Ä¢ Acceso al historial de comandos
        ‚Ä¢ Interfaz modal con efectos visuales
    }
}
package "üîå Controlador Principal" as Controller {
    
    class arduinoc <<Main Controller>> {
        -{static}BAUD_RATE: int = 9600
        -{static}DEFAULT_PORT: String = "COM12"
        -nombrePuerto: String
        -puerto: SerialPort
        -pantalla: pantallainicial1
        -pantalla2: Pantalla2
        -buffer: StringBuilder
        -isConnected: boolean
        --
        +{static}main(args: String[]): void
        -inicializarSistema(): void
        -buscarPuerto(): SerialPort
        -configurarPuerto(): boolean
        -establecerConexion(): boolean
        -procesarCodigo(linea: String): void
        -ejecutarAccion(codigo: String): void
        -leerDatosSerial(): void
        -cerrarConexion(): void
        --
        **21 C√≥digos IR Soportados:**
        ‚Ä¢ 0x7: Bajar Volumen
        ‚Ä¢ 0x15: Subir Volumen  
        ‚Ä¢ 0x16-0x4A: N√∫meros 0-9
        ‚Ä¢ 0x45-0x47: Control Canales
        ‚Ä¢ 0x40,0x44,0x43: Reproducci√≥n
        ‚Ä¢ 0x19: Iniciar Sistema
        ‚Ä¢ 0xD: Men√∫ Comandos
        ‚Ä¢ 0x9: Salir
    }
}

package "üíæ Persistencia de Datos" as Data {
    
    class ArduinoDataDAO <<DAO Pattern>> {
        -{static}{final}DB_URL: String = "jdbc:sqlite:./datos_arduino.db"
        -{static}{final}TABLE_NAME: String = "registros_arduino"
        --
        +{static}insertCodigo(linea: String): void
        +{static}getAllRegistros(): List<String>
        +{static}getRegistrosPorFecha(fecha: Date): List<String>
        +{static}connect(): Connection
        +{static}closeConnection(conn: Connection): void
        +{static}executeQuery(sql: String): ResultSet
        --
        **Responsabilidades:**
        ‚Ä¢ Gesti√≥n de base de datos SQLite
        ‚Ä¢ Persistencia de c√≥digos IR recibidos
        ‚Ä¢ Consultas de historial con timestamps
        ‚Ä¢ Patr√≥n DAO para abstracci√≥n de datos
        ‚Ä¢ Manejo seguro de conexiones
    }
    
    class DatabaseInitializer <<Utility>> {
        -{static}{final}DB_URL: String = "jdbc:sqlite:./datos_arduino.db"
        -{static}{final}CREATE_TABLE_SQL: String
        --
        +{static}main(args: String[]): void
        +{static}initializeDatabase(): void
        -{static}createTables(conn: Connection): void
        -{static}validateSchema(): boolean
        --
        **Esquema de Tabla registros_arduino:**
        ‚Ä¢ id: INTEGER PRIMARY KEY AUTOINCREMENT
        ‚Ä¢ codigo_arduino: TEXT NOT NULL  
        ‚Ä¢ marca_tiempo: TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        --
        **Responsabilidades:**
        ‚Ä¢ Inicializaci√≥n autom√°tica de BD
        ‚Ä¢ Creaci√≥n de esquema de tablas
        ‚Ä¢ Validaci√≥n de estructura existente
    }
}

package "üì° Comunicaci√≥n Serial" as Serial {
    
    enum CodigoIR <<enumeration>> {
        +BAJAR_VOLUMEN("0x7")
        +SUBIR_VOLUMEN("0x15")
        +NUMERO_0("0x16")
        +NUMERO_1("0xC")
        +NUMERO_2("0x18")
        +NUMERO_3("0x5E")
        +NUMERO_4("0x8")
        +NUMERO_5("0x1C")
        +NUMERO_6("0x5A")
        +NUMERO_7("0x42")
        +NUMERO_8("0x52")
        +NUMERO_9("0x4A")
        +CANAL_ANTERIOR("0x45")
        +CANAL_ACTUAL("0x46")
        +CANAL_PROXIMO("0x47")
        +AVANZAR("0x40")
        +RETROCEDER("0x44")
        +SALTAR("0x43")
        +INICIAR_SISTEMA("0x19")
        +MENU_COMANDOS("0xD")
        +SALIR("0x9")
        --
        -{final}codigo: String
        --
        -CodigoIR(codigo: String)
        +getCodigo(): String
        +{static}fromString(codigo: String): CodigoIR
        +getDescripcion(): String
    }
}

package "üîß Librer√≠as Externas" as External {
    
    class SerialPort <<External Library>> {
        +{static}getCommPorts(): SerialPort[]
        +getSystemPortName(): String
        +setBaudRate(baudRate: int): void
        +openPort(): boolean
        +closePort(): void
        +getInputStream(): InputStream
        +isOpen(): boolean
    }
    
    interface Connection <<JDBC>> {
        +createStatement(): Statement
        +prepareStatement(sql: String): PreparedStatement
        +close(): void
        +isClosed(): boolean
    }
    
    class PreparedStatement <<JDBC>> {
        +setString(index: int, value: String): void
        +executeUpdate(): int
        +executeQuery(): ResultSet
    }
    
    class ImageIO <<Java IO>> {
        +{static}read(file: File): BufferedImage
    }
    
    class Timer <<Swing Timer>> {
        +Timer(delay: int, listener: ActionListener)
        +start(): void
        +setRepeats(repeats: boolean): void
    }
}
package "üé® Framework Swing" as Swing {
    
    abstract class JPanel <<Swing Component>> {
        +add(component: Component): void
        +setLayout(layout: LayoutManager): void
        +setBackground(color: Color): void
    }
    
    class JButton <<Swing Component>> {
        +setText(text: String): void
        +addActionListener(listener: ActionListener): void
        +doClick(): void
    }
    
    class JLabel <<Swing Component>> {
        +setText(text: String): void
        +setIcon(icon: Icon): void
    }
    
    class JFrame <<Swing Component>> {
        +setVisible(visible: boolean): void
        +pack(): void
        +dispose(): void
    }
    
    abstract class JDialog <<Swing Component>> {
        +setModal(modal: boolean): void
        +setLocationRelativeTo(component: Component): void
    }
}

' ===== RELACIONES DE HERENCIA =====
SwingComponent <|-- pantallainicial1 : extends
SwingComponent <|-- Pantalla2 : extends
pantallainicial1 --|> JPanel : extends
Pantalla2 --|> JPanel : extends  
MenuComando --|> JDialog : extends

' ===== RELACIONES DE COMPOSICI√ìN =====
arduinoc *--> pantallainicial1 : "1\ncontiene"
arduinoc *--> Pantalla2 : "1\ncontiene"
pantallainicial1 *--> Pantalla2 : "1\nframe2"

' ===== RELACIONES DE AGREGACI√ìN =====
pantallainicial1 o--> JButton : "3\nbotones"
pantallainicial1 o--> JLabel : "3\nlabels"
Pantalla2 o--> JLabel : "4\nlabels"
Pantalla2 o--> JButton : "1\nbackButton"
Pantalla2 o--> JPanel : "1\nkeyDisplayPanel"

' ===== RELACIONES DE USO/DEPENDENCIA =====
arduinoc ..> SerialPort : <<uses>>
arduinoc ..> ArduinoDataDAO : <<calls>>
arduinoc ..> CodigoIR : <<interprets>>
ArduinoDataDAO ..> Connection : <<uses>>
ArduinoDataDAO ..> PreparedStatement : <<uses>>
DatabaseInitializer ..> Connection : <<creates>>
pantallainicial1 ..> MenuComando : <<creates>>
Pantalla2 ..> ImageIO : <<uses>>
Pantalla2 ..> Timer : <<uses>>

' ===== RELACIONES ESPECIALES =====
CodigoIR --> arduinoc : <<triggers actions>>
DatabaseInitializer --> ArduinoDataDAO : <<initializes for>>

' ===== NOTAS EXPLICATIVAS =====
note top of arduinoc : "**CONTROLADOR PRINCIPAL**\n‚Ä¢ Punto de entrada del sistema\n‚Ä¢ Gestiona comunicaci√≥n serial COM12\n‚Ä¢ Procesa 21 c√≥digos IR diferentes\n‚Ä¢ Coordina GUI mejorada y persistencia\n‚Ä¢ Implementa efectos visuales"

note right of ArduinoDataDAO : "**PATR√ìN DAO**\n‚Ä¢ Abstrae acceso a SQLite\n‚Ä¢ Operaciones CRUD\n‚Ä¢ Manejo de conexiones\n‚Ä¢ Logging de actividad"

note left of pantallainicial1 : "**PANTALLA PRINCIPAL MEJORADA**\n‚Ä¢ Interfaz de usuario con dise√±o avanzado\n‚Ä¢ Sistema de temas personalizables\n‚Ä¢ Navegaci√≥n con efectos hover\n‚Ä¢ Gesti√≥n din√°mica de im√°genes\n‚Ä¢ Colores y estilos profesionales"

note bottom of Pantalla2 : "**DISPLAY DE C√ìDIGOS MEJORADO**\n‚Ä¢ Visualizaci√≥n con im√°genes din√°micas\n‚Ä¢ Animaciones y efectos visuales\n‚Ä¢ Feedback inmediato con colores\n‚Ä¢ Timer para transiciones suaves\n‚Ä¢ Carga de imagenes_numeros/*.png"

note right of CodigoIR : "**21 C√ìDIGOS IR SOPORTADOS**\n‚Ä¢ Control de volumen (2)\n‚Ä¢ D√≠gitos num√©ricos (10)\n‚Ä¢ Navegaci√≥n canales (3)\n‚Ä¢ Control reproducci√≥n (3)\n‚Ä¢ Comandos sistema (3)\n‚Ä¢ Total: 21 comandos √∫nicos"

note left of DatabaseInitializer : "**INICIALIZADOR BD**\n‚Ä¢ Creaci√≥n autom√°tica de esquema\n‚Ä¢ Validaci√≥n de estructura\n‚Ä¢ Migraci√≥n de datos\n‚Ä¢ Configuraci√≥n inicial"

' ===== LEYENDA DE MODIFICADORES DE VISIBILIDAD =====
legend top left
  **Modificadores de Visibilidad:**
  **+** P√∫blico (public)
  **-** Privado (private) 
  **#** Protegido (protected)
  **~** Paquete (package-private)
  **{static}** M√©todo/Atributo est√°tico
  **{final}** Constante/M√©todo final
  **{abstract}** Clase/M√©todo abstracto
end legend

@enduml
